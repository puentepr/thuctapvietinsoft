#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MN
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="phanmemtinhluon_P4")]
	public partial class MenuLQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMEN_Menu(MEN_Menu instance);
    partial void UpdateMEN_Menu(MEN_Menu instance);
    partial void DeleteMEN_Menu(MEN_Menu instance);
    partial void InserttblMD_Message(tblMD_Message instance);
    partial void UpdatetblMD_Message(tblMD_Message instance);
    partial void DeletetblMD_Message(tblMD_Message instance);
    #endregion
		
		public MenuLQDataContext() : 
				base(global::MN.Properties.Settings.Default.phanmemtinhluon_P4ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MenuLQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MenuLQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MenuLQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MenuLQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MEN_Menu> MEN_Menus
		{
			get
			{
				return this.GetTable<MEN_Menu>();
			}
		}
		
		public System.Data.Linq.Table<tblMD_Message> tblMD_Messages
		{
			get
			{
				return this.GetTable<tblMD_Message>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEN_Menu")]
	public partial class MEN_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MenuID;
		
		private string _ClassName;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<bool> _IsModal;
		
		private string _ParentMenuID;
		
		private string _LinkMenuID;
		
		private System.Nullable<bool> _IsCollapsed;
		
		private string _AssemblyName;
		
		private string _ShortcutKeys;
		
		private System.Nullable<bool> _IsVisible;
		
		private System.Nullable<bool> _SupperAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIDChanging(string value);
    partial void OnMenuIDChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnIsModalChanging(System.Nullable<bool> value);
    partial void OnIsModalChanged();
    partial void OnParentMenuIDChanging(string value);
    partial void OnParentMenuIDChanged();
    partial void OnLinkMenuIDChanging(string value);
    partial void OnLinkMenuIDChanged();
    partial void OnIsCollapsedChanging(System.Nullable<bool> value);
    partial void OnIsCollapsedChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    partial void OnShortcutKeysChanging(string value);
    partial void OnShortcutKeysChanged();
    partial void OnIsVisibleChanging(System.Nullable<bool> value);
    partial void OnIsVisibleChanged();
    partial void OnSupperAdminChanging(System.Nullable<bool> value);
    partial void OnSupperAdminChanged();
    #endregion
		
		public MEN_Menu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(50)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsModal", DbType="Bit")]
		public System.Nullable<bool> IsModal
		{
			get
			{
				return this._IsModal;
			}
			set
			{
				if ((this._IsModal != value))
				{
					this.OnIsModalChanging(value);
					this.SendPropertyChanging();
					this._IsModal = value;
					this.SendPropertyChanged("IsModal");
					this.OnIsModalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMenuID", DbType="VarChar(20)")]
		public string ParentMenuID
		{
			get
			{
				return this._ParentMenuID;
			}
			set
			{
				if ((this._ParentMenuID != value))
				{
					this.OnParentMenuIDChanging(value);
					this.SendPropertyChanging();
					this._ParentMenuID = value;
					this.SendPropertyChanged("ParentMenuID");
					this.OnParentMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkMenuID", DbType="VarChar(20)")]
		public string LinkMenuID
		{
			get
			{
				return this._LinkMenuID;
			}
			set
			{
				if ((this._LinkMenuID != value))
				{
					this.OnLinkMenuIDChanging(value);
					this.SendPropertyChanging();
					this._LinkMenuID = value;
					this.SendPropertyChanged("LinkMenuID");
					this.OnLinkMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCollapsed", DbType="Bit")]
		public System.Nullable<bool> IsCollapsed
		{
			get
			{
				return this._IsCollapsed;
			}
			set
			{
				if ((this._IsCollapsed != value))
				{
					this.OnIsCollapsedChanging(value);
					this.SendPropertyChanging();
					this._IsCollapsed = value;
					this.SendPropertyChanged("IsCollapsed");
					this.OnIsCollapsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyName", DbType="NVarChar(50)")]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this.OnAssemblyNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyName = value;
					this.SendPropertyChanged("AssemblyName");
					this.OnAssemblyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortcutKeys", DbType="VarChar(20)")]
		public string ShortcutKeys
		{
			get
			{
				return this._ShortcutKeys;
			}
			set
			{
				if ((this._ShortcutKeys != value))
				{
					this.OnShortcutKeysChanging(value);
					this.SendPropertyChanging();
					this._ShortcutKeys = value;
					this.SendPropertyChanged("ShortcutKeys");
					this.OnShortcutKeysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupperAdmin", DbType="Bit")]
		public System.Nullable<bool> SupperAdmin
		{
			get
			{
				return this._SupperAdmin;
			}
			set
			{
				if ((this._SupperAdmin != value))
				{
					this.OnSupperAdminChanging(value);
					this.SendPropertyChanging();
					this._SupperAdmin = value;
					this.SendPropertyChanged("SupperAdmin");
					this.OnSupperAdminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMD_Message")]
	public partial class tblMD_Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MessageID;
		
		private string _Language;
		
		private string _Content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(string value);
    partial void OnMessageIDChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    #endregion
		
		public tblMD_Message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
