#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HPA.SQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="phanmemtinhluon_P4")]
	public partial class TADatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblHasTA(tblHasTA instance);
    partial void UpdatetblHasTA(tblHasTA instance);
    partial void DeletetblHasTA(tblHasTA instance);
    partial void InserttblWSchedule(tblWSchedule instance);
    partial void UpdatetblWSchedule(tblWSchedule instance);
    partial void DeletetblWSchedule(tblWSchedule instance);
    #endregion
		
		public TADatabaseDataContext() : 
				base(global::HPA.SQL.Properties.Settings.Default.phanmemtinhluon_P4ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TADatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TADatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TADatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TADatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblHasTA> tblHasTAs
		{
			get
			{
				return this.GetTable<tblHasTA>();
			}
		}
		
		public System.Data.Linq.Table<tblWSchedule> tblWSchedules
		{
			get
			{
				return this.GetTable<tblWSchedule>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblHasTA")]
	public partial class tblHasTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeID;
		
		private System.DateTime _AttDate;
		
		private byte _Period;
		
		private System.Nullable<short> _ShiftID;
		
		private System.Nullable<System.DateTime> _AttStart;
		
		private System.Nullable<System.DateTime> _AttEnd;
		
		private System.Nullable<bool> _Approve;
		
		private System.Nullable<int> _TimeStatus;
		
		private string _TimeReason;
		
		private System.Nullable<int> _ContructionID;
		
		private string _NoTAReasonCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnAttDateChanging(System.DateTime value);
    partial void OnAttDateChanged();
    partial void OnPeriodChanging(byte value);
    partial void OnPeriodChanged();
    partial void OnShiftIDChanging(System.Nullable<short> value);
    partial void OnShiftIDChanged();
    partial void OnAttStartChanging(System.Nullable<System.DateTime> value);
    partial void OnAttStartChanged();
    partial void OnAttEndChanging(System.Nullable<System.DateTime> value);
    partial void OnAttEndChanged();
    partial void OnApproveChanging(System.Nullable<bool> value);
    partial void OnApproveChanged();
    partial void OnTimeStatusChanging(System.Nullable<int> value);
    partial void OnTimeStatusChanged();
    partial void OnTimeReasonChanging(string value);
    partial void OnTimeReasonChanged();
    partial void OnContructionIDChanging(System.Nullable<int> value);
    partial void OnContructionIDChanged();
    partial void OnNoTAReasonCodeChanging(string value);
    partial void OnNoTAReasonCodeChanged();
    #endregion
		
		public tblHasTA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime AttDate
		{
			get
			{
				return this._AttDate;
			}
			set
			{
				if ((this._AttDate != value))
				{
					this.OnAttDateChanging(value);
					this.SendPropertyChanging();
					this._AttDate = value;
					this.SendPropertyChanged("AttDate");
					this.OnAttDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="SmallInt")]
		public System.Nullable<short> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> AttStart
		{
			get
			{
				return this._AttStart;
			}
			set
			{
				if ((this._AttStart != value))
				{
					this.OnAttStartChanging(value);
					this.SendPropertyChanging();
					this._AttStart = value;
					this.SendPropertyChanged("AttStart");
					this.OnAttStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> AttEnd
		{
			get
			{
				return this._AttEnd;
			}
			set
			{
				if ((this._AttEnd != value))
				{
					this.OnAttEndChanging(value);
					this.SendPropertyChanging();
					this._AttEnd = value;
					this.SendPropertyChanged("AttEnd");
					this.OnAttEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approve", DbType="Bit")]
		public System.Nullable<bool> Approve
		{
			get
			{
				return this._Approve;
			}
			set
			{
				if ((this._Approve != value))
				{
					this.OnApproveChanging(value);
					this.SendPropertyChanging();
					this._Approve = value;
					this.SendPropertyChanged("Approve");
					this.OnApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStatus", DbType="Int")]
		public System.Nullable<int> TimeStatus
		{
			get
			{
				return this._TimeStatus;
			}
			set
			{
				if ((this._TimeStatus != value))
				{
					this.OnTimeStatusChanging(value);
					this.SendPropertyChanging();
					this._TimeStatus = value;
					this.SendPropertyChanged("TimeStatus");
					this.OnTimeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeReason", DbType="NVarChar(100)")]
		public string TimeReason
		{
			get
			{
				return this._TimeReason;
			}
			set
			{
				if ((this._TimeReason != value))
				{
					this.OnTimeReasonChanging(value);
					this.SendPropertyChanging();
					this._TimeReason = value;
					this.SendPropertyChanged("TimeReason");
					this.OnTimeReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContructionID", DbType="Int")]
		public System.Nullable<int> ContructionID
		{
			get
			{
				return this._ContructionID;
			}
			set
			{
				if ((this._ContructionID != value))
				{
					this.OnContructionIDChanging(value);
					this.SendPropertyChanging();
					this._ContructionID = value;
					this.SendPropertyChanged("ContructionID");
					this.OnContructionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTAReasonCode", DbType="VarChar(20)")]
		public string NoTAReasonCode
		{
			get
			{
				return this._NoTAReasonCode;
			}
			set
			{
				if ((this._NoTAReasonCode != value))
				{
					this.OnNoTAReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._NoTAReasonCode = value;
					this.SendPropertyChanged("NoTAReasonCode");
					this.OnNoTAReasonCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWSchedule")]
	public partial class tblWSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeID;
		
		private System.DateTime _ScheduleDate;
		
		private int _ShiftID;
		
		private int _HolidayStatus;
		
		private System.Nullable<int> _LeaveStatus;
		
		private System.Nullable<bool> _Approved;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnScheduleDateChanging(System.DateTime value);
    partial void OnScheduleDateChanged();
    partial void OnShiftIDChanging(int value);
    partial void OnShiftIDChanged();
    partial void OnHolidayStatusChanging(int value);
    partial void OnHolidayStatusChanged();
    partial void OnLeaveStatusChanging(System.Nullable<int> value);
    partial void OnLeaveStatusChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    #endregion
		
		public tblWSchedule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime ScheduleDate
		{
			get
			{
				return this._ScheduleDate;
			}
			set
			{
				if ((this._ScheduleDate != value))
				{
					this.OnScheduleDateChanging(value);
					this.SendPropertyChanging();
					this._ScheduleDate = value;
					this.SendPropertyChanged("ScheduleDate");
					this.OnScheduleDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int NOT NULL")]
		public int ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayStatus", DbType="Int NOT NULL")]
		public int HolidayStatus
		{
			get
			{
				return this._HolidayStatus;
			}
			set
			{
				if ((this._HolidayStatus != value))
				{
					this.OnHolidayStatusChanging(value);
					this.SendPropertyChanging();
					this._HolidayStatus = value;
					this.SendPropertyChanged("HolidayStatus");
					this.OnHolidayStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveStatus", DbType="Int")]
		public System.Nullable<int> LeaveStatus
		{
			get
			{
				return this._LeaveStatus;
			}
			set
			{
				if ((this._LeaveStatus != value))
				{
					this.OnLeaveStatusChanging(value);
					this.SendPropertyChanging();
					this._LeaveStatus = value;
					this.SendPropertyChanged("LeaveStatus");
					this.OnLeaveStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit")]
		public System.Nullable<bool> Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
